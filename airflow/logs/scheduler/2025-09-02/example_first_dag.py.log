[2025-09-02T21:15:02.388+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=121) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:15:02.397+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:15:02.405+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:15:02.402+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:15:02.496+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:15:02.972+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:15:02.971+0800] INFO - override.py:1911 - create_permission() - Created Permission View: can edit on DAG:example_first_dag
[2025-09-02T21:15:03.002+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:15:03.001+0800] INFO - override.py:1911 - create_permission() - Created Permission View: can delete on DAG:example_first_dag
[2025-09-02T21:15:03.022+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:15:03.021+0800] INFO - override.py:1911 - create_permission() - Created Permission View: can read on DAG:example_first_dag
[2025-09-02T21:15:03.042+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:15:03.041+0800] INFO - override.py:1911 - create_permission() - Created Permission View: can delete on DAG Run:example_first_dag
[2025-09-02T21:15:03.062+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:15:03.061+0800] INFO - override.py:1911 - create_permission() - Created Permission View: can create on DAG Run:example_first_dag
[2025-09-02T21:15:03.081+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:15:03.080+0800] INFO - override.py:1911 - create_permission() - Created Permission View: menu access on DAG Run:example_first_dag
[2025-09-02T21:15:03.101+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:15:03.100+0800] INFO - override.py:1911 - create_permission() - Created Permission View: can read on DAG Run:example_first_dag
[2025-09-02T21:15:03.101+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:15:03.101+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:15:03.134+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:15:03.133+0800] INFO - dag.py:3262 - bulk_write_to_db() - Creating ORM DAG for example_first_dag
[2025-09-02T21:15:03.179+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:15:03.178+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 12:00:00+00:00, run_after=2025-09-02 13:00:00+00:00
[2025-09-02T21:15:03.257+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.917 seconds
[2025-09-02T21:15:33.438+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=162) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:15:33.442+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:15:33.447+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:15:33.446+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:15:33.492+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:15:33.561+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:15:33.560+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:15:33.620+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:15:33.620+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 12:00:00+00:00, run_after=2025-09-02 13:00:00+00:00
[2025-09-02T21:15:33.658+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.235 seconds
[2025-09-02T21:16:09.664+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=229) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:16:09.671+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:16:09.706+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:16:09.706+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:16:09.805+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:16:10.168+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:16:10.167+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:16:10.553+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:16:10.552+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:16:10.665+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 1.073 seconds
[2025-09-02T21:16:51.533+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=453) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:16:51.545+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:16:51.562+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:16:51.561+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:16:51.676+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:16:51.811+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:16:51.811+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:16:51.938+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:16:51.937+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:16:51.995+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.498 seconds
[2025-09-02T21:17:24.719+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=504) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:17:24.732+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:17:24.740+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:17:24.739+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:17:24.802+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:17:24.906+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:17:24.905+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:17:25.016+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:17:25.016+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:17:25.080+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.385 seconds
[2025-09-02T21:18:00.414+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=607) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:18:00.429+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:18:00.477+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:18:00.475+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:18:00.703+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:18:00.957+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:18:00.956+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:18:01.171+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:18:01.170+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:18:01.272+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.975 seconds
[2025-09-02T21:18:31.715+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=639) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:18:31.718+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:18:31.722+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:18:31.722+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:18:31.757+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:18:31.813+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:18:31.813+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:18:31.868+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:18:31.868+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:18:31.913+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.217 seconds
[2025-09-02T21:19:02.082+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=669) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:19:02.085+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:19:02.088+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:19:02.087+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:19:02.116+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:19:02.160+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:19:02.160+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:19:02.201+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:19:02.201+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:19:02.230+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.159 seconds
[2025-09-02T21:19:32.588+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=710) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:19:32.596+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:19:32.602+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:19:32.600+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:19:32.645+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:19:32.709+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:19:32.709+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:19:32.778+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:19:32.778+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:19:32.844+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.269 seconds
[2025-09-02T21:20:03.142+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=751) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:20:03.149+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:20:03.157+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:20:03.155+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:20:03.254+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:20:03.348+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:20:03.348+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:20:03.439+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:20:03.438+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:20:03.536+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.431 seconds
[2025-09-02T21:20:33.958+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=792) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:20:33.962+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:20:33.977+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:20:33.976+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:20:34.084+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:20:34.179+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:20:34.179+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:20:34.258+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:20:34.258+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:20:34.312+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.480 seconds
[2025-09-02T21:21:04.952+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=833) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:21:04.955+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:21:04.959+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:21:04.959+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:21:04.991+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:21:05.046+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:21:05.046+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:21:05.089+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:21:05.088+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:21:05.121+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.183 seconds
[2025-09-02T21:21:35.736+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=874) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:21:35.739+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:21:35.742+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:21:35.741+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:21:35.768+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:21:35.814+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:21:35.814+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:21:35.855+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:21:35.854+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:21:35.890+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.166 seconds
[2025-09-02T21:22:06.214+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=915) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:22:06.216+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:22:06.219+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:22:06.219+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:22:06.254+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:22:06.297+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:22:06.297+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:22:06.340+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:22:06.340+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:22:06.373+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.170 seconds
[2025-09-02T21:22:36.433+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=956) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:22:36.439+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:22:36.443+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:22:36.442+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:22:36.473+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:22:36.525+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:22:36.525+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:22:36.566+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:22:36.566+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:22:36.598+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.180 seconds
[2025-09-02T21:23:06.722+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=997) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:23:06.726+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:23:06.731+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:23:06.731+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:23:06.798+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:23:06.938+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:23:06.937+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:23:07.035+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:23:07.034+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:23:07.084+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.379 seconds
[2025-09-02T21:23:37.353+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1038) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:23:37.359+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:23:37.362+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:23:37.362+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:23:37.390+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:23:37.439+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:23:37.439+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:23:37.484+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:23:37.484+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:23:37.520+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.179 seconds
[2025-09-02T21:24:07.587+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1079) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:24:07.589+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:24:07.592+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:24:07.591+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:24:07.619+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:24:07.665+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:24:07.665+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:24:07.704+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:24:07.704+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:24:07.741+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.164 seconds
[2025-09-02T21:24:38.066+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1120) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:24:38.072+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:24:38.078+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:24:38.077+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:24:38.117+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:24:38.163+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:24:38.163+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:24:38.203+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:24:38.203+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:24:38.236+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.187 seconds
[2025-09-02T21:25:09.047+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1161) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:25:09.050+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:25:09.057+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:25:09.056+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:25:09.095+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:25:09.146+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:25:09.146+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:25:09.196+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:25:09.195+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:25:09.233+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.202 seconds
[2025-09-02T21:25:39.587+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1202) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:25:39.589+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:25:39.594+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:25:39.593+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:25:39.635+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:25:39.689+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:25:39.688+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:25:39.751+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:25:39.750+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:25:39.789+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.219 seconds
[2025-09-02T21:26:09.920+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1243) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:26:09.922+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:26:09.925+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:26:09.924+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:26:09.949+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:26:09.995+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:26:09.995+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:26:10.047+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:26:10.047+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:26:10.083+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.173 seconds
[2025-09-02T21:26:40.409+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1284) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:26:40.411+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:26:40.415+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:26:40.414+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:26:40.446+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:26:40.489+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:26:40.488+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:26:40.595+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:26:40.595+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:26:40.639+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.245 seconds
[2025-09-02T21:27:10.767+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1323) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:27:10.770+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:27:10.776+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:27:10.775+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:27:10.811+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:27:10.876+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:27:10.876+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:27:10.941+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:27:10.941+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:27:10.979+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.225 seconds
[2025-09-02T21:27:44.118+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1364) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:27:44.125+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:27:44.143+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:27:44.140+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:27:44.290+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:27:44.385+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:27:44.385+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:27:44.460+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:27:44.459+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:27:44.516+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.449 seconds
[2025-09-02T21:28:16.740+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1405) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:28:16.743+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:28:16.748+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:28:16.748+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:28:16.800+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:28:16.889+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:28:16.889+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:28:16.964+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:28:16.963+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:28:16.996+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.271 seconds
[2025-09-02T21:28:49.789+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1446) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:28:49.792+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:28:49.798+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:28:49.797+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:28:49.854+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:28:49.953+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:28:49.952+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:28:50.017+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:28:50.017+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:28:50.063+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.297 seconds
[2025-09-02T21:29:22.091+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1487) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:29:22.097+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:29:22.104+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:29:22.102+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:29:22.158+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:29:22.248+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:29:22.247+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:29:22.319+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:29:22.319+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:29:22.368+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.298 seconds
[2025-09-02T21:29:54.685+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1528) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:29:54.687+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:29:54.691+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:29:54.690+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:29:54.728+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:29:54.778+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:29:54.778+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:29:54.818+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:29:54.818+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:29:54.856+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.187 seconds
[2025-09-02T21:30:27.053+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1569) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:30:27.069+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:30:27.081+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:30:27.080+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:30:27.160+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:30:27.233+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:30:27.233+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:30:27.294+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:30:27.293+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:30:27.337+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.333 seconds
[2025-09-02T21:30:59.603+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1610) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:30:59.605+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:30:59.610+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:30:59.609+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:30:59.646+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:30:59.692+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:30:59.691+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:30:59.741+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:30:59.740+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:30:59.777+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.190 seconds
[2025-09-02T21:31:31.840+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1651) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:31:31.847+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:31:31.854+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:31:31.853+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:31:31.903+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:31:31.973+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:31:31.973+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:31:32.022+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:31:32.022+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:31:32.062+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.244 seconds
[2025-09-02T21:32:04.411+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1692) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:32:04.412+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:32:04.416+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:32:04.416+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:32:04.449+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:32:04.506+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:32:04.506+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:32:04.575+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:32:04.575+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:32:04.622+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.231 seconds
[2025-09-02T21:32:38.403+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1733) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:32:38.413+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:32:38.423+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:32:38.421+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:32:38.512+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:32:38.645+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:32:38.640+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:32:38.813+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:32:38.812+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:32:38.948+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.610 seconds
[2025-09-02T21:33:10.625+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1774) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:33:10.627+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:33:10.631+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:33:10.630+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:33:10.665+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:33:10.726+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:33:10.725+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:33:10.780+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:33:10.780+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:33:10.819+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.213 seconds
[2025-09-02T21:33:41.063+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1802) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:33:41.068+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:33:41.076+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:33:41.075+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:33:41.138+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:33:41.236+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:33:41.236+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:33:41.348+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:33:41.348+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:33:41.425+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.376 seconds
[2025-09-02T21:34:11.615+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1832) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:34:11.617+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:34:11.621+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:34:11.620+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:34:11.675+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:34:11.764+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:34:11.764+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:34:11.820+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:34:11.820+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:34:11.873+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.279 seconds
[2025-09-02T21:34:42.479+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1871) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:34:42.481+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:34:42.484+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:34:42.484+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:34:42.510+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:34:42.554+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:34:42.554+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:34:42.603+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:34:42.603+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:34:42.642+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.173 seconds
[2025-09-02T21:35:12.969+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1912) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:35:12.972+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:35:12.976+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:35:12.975+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:35:13.004+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:35:13.055+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:35:13.055+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:35:13.103+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:35:13.102+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:35:13.156+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.200 seconds
[2025-09-02T21:35:43.531+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1953) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:35:43.542+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:35:43.546+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:35:43.546+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:35:43.593+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:35:43.654+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:35:43.654+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:35:43.701+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:35:43.700+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:35:43.736+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.239 seconds
[2025-09-02T21:36:14.501+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=1994) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:36:14.503+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:36:14.510+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:36:14.507+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:36:14.552+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:36:14.614+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:36:14.613+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:36:14.665+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:36:14.665+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:36:14.710+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.224 seconds
[2025-09-02T21:36:45.612+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2035) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:36:45.615+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:36:45.620+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:36:45.620+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:36:45.654+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:36:45.714+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:36:45.714+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:36:45.781+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:36:45.780+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:36:45.844+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.246 seconds
[2025-09-02T21:37:16.029+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2076) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:37:16.031+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:37:16.034+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:37:16.033+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:37:16.062+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:37:16.118+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:37:16.117+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:37:16.164+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:37:16.164+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:37:16.215+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.200 seconds
[2025-09-02T21:37:46.664+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2117) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:37:46.666+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:37:46.671+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:37:46.671+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:37:46.710+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:37:46.758+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:37:46.757+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:37:46.799+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:37:46.798+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:37:46.833+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.182 seconds
[2025-09-02T21:38:17.585+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2158) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:38:17.587+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:38:17.590+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:38:17.589+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:38:17.629+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:38:17.699+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:38:17.699+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:38:17.766+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:38:17.765+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:38:17.825+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.254 seconds
[2025-09-02T21:38:47.936+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2199) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:38:47.938+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:38:47.944+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:38:47.943+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:38:47.978+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:38:48.033+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:38:48.032+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:38:48.084+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:38:48.084+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:38:48.129+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.213 seconds
[2025-09-02T21:39:18.669+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2240) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:39:18.672+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:39:18.677+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:39:18.677+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:39:18.713+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:39:18.767+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:39:18.766+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:39:18.812+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:39:18.811+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:39:18.858+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.202 seconds
[2025-09-02T21:39:49.697+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2281) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:39:49.700+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:39:49.705+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:39:49.704+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:39:49.741+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:39:49.789+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:39:49.788+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:39:49.833+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:39:49.833+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:39:49.869+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.190 seconds
[2025-09-02T21:40:20.101+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2322) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:40:20.104+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:40:20.109+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:40:20.109+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:40:20.154+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:40:20.203+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:40:20.203+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:40:20.256+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:40:20.255+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:40:20.297+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.216 seconds
[2025-09-02T21:40:50.974+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2363) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:40:50.977+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:40:50.990+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:40:50.989+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:40:51.047+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:40:51.135+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:40:51.134+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:40:51.202+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:40:51.201+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:40:51.249+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.301 seconds
[2025-09-02T21:41:22.040+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2404) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:41:22.042+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:41:22.048+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:41:22.047+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:41:22.082+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:41:22.136+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:41:22.135+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:41:22.187+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:41:22.186+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:41:22.222+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.199 seconds
[2025-09-02T21:41:53.159+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2445) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:41:53.172+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:41:53.177+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:41:53.177+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:41:53.271+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:41:53.352+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:41:53.351+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:41:53.401+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:41:53.401+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:41:53.438+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.296 seconds
[2025-09-02T21:42:24.376+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2486) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:42:24.377+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:42:24.380+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:42:24.380+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:42:24.410+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:42:24.465+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:42:24.464+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:42:24.536+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:42:24.535+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:42:24.604+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.241 seconds
[2025-09-02T21:42:54.946+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2529) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:42:54.948+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:42:54.953+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:42:54.953+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:42:54.988+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:42:55.038+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:42:55.038+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:42:55.084+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:42:55.083+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:42:55.124+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.195 seconds
[2025-09-02T21:43:25.523+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2568) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:43:25.527+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:43:25.542+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:43:25.541+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:43:25.632+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:43:25.773+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:43:25.772+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:43:25.889+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:43:25.888+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:43:25.968+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.483 seconds
[2025-09-02T21:43:56.717+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2609) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:43:56.723+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:43:56.730+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:43:56.729+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:43:56.798+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:43:56.876+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:43:56.875+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:43:56.945+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:43:56.945+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:43:56.997+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.305 seconds
[2025-09-02T21:44:27.466+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2650) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:44:27.468+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:44:27.476+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:44:27.475+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:44:27.530+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:44:27.596+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:44:27.596+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:44:27.667+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:44:27.667+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:44:27.714+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.270 seconds
[2025-09-02T21:44:59.390+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2696) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:44:59.400+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:44:59.407+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:44:59.406+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:44:59.555+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:44:59.632+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:44:59.631+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:44:59.823+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:44:59.822+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:44:59.963+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.632 seconds
[2025-09-02T21:45:30.340+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2739) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:45:30.341+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:45:30.348+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:45:30.347+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:45:30.382+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:45:30.410+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:45:30.409+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:45:30.471+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:45:30.471+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:45:30.518+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.193 seconds
[2025-09-02T21:46:00.833+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2782) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:46:00.836+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:46:00.841+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:46:00.840+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:46:00.892+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:46:01.210+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:46:01.209+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:46:01.251+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:46:01.251+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:46:01.289+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.473 seconds
[2025-09-02T21:46:31.409+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2835) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:46:31.412+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:46:31.419+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:46:31.418+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:46:31.462+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:46:31.512+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:46:31.512+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:46:31.556+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:46:31.555+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:46:31.594+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.203 seconds
[2025-09-02T21:47:01.834+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2914) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:47:01.836+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:47:01.840+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:47:01.839+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:47:01.872+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:47:01.937+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:47:01.937+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:47:02.000+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:47:01.999+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:47:02.058+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.238 seconds
[2025-09-02T21:47:32.766+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=2965) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:47:32.768+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:47:32.772+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:47:32.771+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:47:32.806+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:47:32.870+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:47:32.869+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:47:32.923+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:47:32.923+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:47:32.976+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.223 seconds
[2025-09-02T21:48:03.301+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=3031) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:48:03.303+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:48:03.307+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:48:03.306+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:48:03.335+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:48:03.384+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:48:03.384+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:48:03.435+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:48:03.434+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:48:03.474+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.183 seconds
[2025-09-02T21:48:33.570+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=3107) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:48:33.572+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:48:33.577+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:48:33.576+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:48:33.616+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:48:33.677+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:48:33.677+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:48:33.759+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:48:33.758+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:48:33.817+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.264 seconds
[2025-09-02T21:49:04.387+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=3153) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:49:04.389+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:49:04.393+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:49:04.392+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:49:04.424+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:49:04.473+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:49:04.473+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:49:04.520+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:49:04.520+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:49:04.565+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.189 seconds
[2025-09-02T21:49:34.801+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=3199) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:49:34.803+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:49:34.806+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:49:34.805+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:49:34.843+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:49:34.927+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:49:34.927+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:49:35.059+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:49:35.057+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:49:35.130+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.340 seconds
[2025-09-02T21:50:05.321+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=3245) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:50:05.324+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:50:05.328+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:50:05.327+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:50:05.360+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:50:05.408+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:50:05.408+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:50:05.456+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:50:05.456+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:50:05.488+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.179 seconds
[2025-09-02T21:50:35.571+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=3291) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:50:35.572+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:50:35.576+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:50:35.575+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:50:35.611+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:50:35.666+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:50:35.665+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:50:35.724+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:50:35.723+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:50:35.778+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.218 seconds
[2025-09-02T21:51:06.604+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=3337) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:51:06.605+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:51:06.609+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:51:06.609+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:51:06.640+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:51:06.695+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:51:06.695+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:51:06.750+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:51:06.749+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:51:06.805+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.212 seconds
[2025-09-02T21:51:37.084+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=3383) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:51:37.086+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:51:37.090+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:51:37.089+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:51:37.128+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:51:37.186+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:51:37.185+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:51:37.232+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:51:37.232+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:51:37.274+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.203 seconds
[2025-09-02T21:52:07.529+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=3429) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:52:07.531+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:52:07.534+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:52:07.533+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:52:07.562+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:52:07.611+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:52:07.611+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:52:07.664+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:52:07.664+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:52:07.716+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.198 seconds
[2025-09-02T21:52:37.874+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=3475) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:52:37.876+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:52:37.881+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:52:37.880+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:52:37.934+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:52:38.026+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:52:38.025+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:52:38.122+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:52:38.121+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:52:38.185+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.328 seconds
[2025-09-02T21:53:09.120+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=3521) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:53:09.135+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:53:09.142+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:53:09.141+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:53:09.203+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:53:09.266+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:53:09.266+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:53:09.320+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:53:09.319+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:53:09.376+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.305 seconds
[2025-09-02T21:53:40.977+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=3567) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:53:40.979+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:53:40.988+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:53:40.986+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:53:41.046+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:53:41.108+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:53:41.107+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:53:41.178+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:53:41.178+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:53:41.302+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.343 seconds
[2025-09-02T21:54:11.599+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=3600) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:54:11.605+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:54:11.611+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:54:11.610+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:54:11.661+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:54:11.748+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:54:11.747+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:54:11.826+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:54:11.825+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:54:11.878+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.305 seconds
[2025-09-02T21:54:42.648+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=3635) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:54:42.652+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:54:42.659+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:54:42.658+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:54:42.706+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:54:42.811+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:54:42.810+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:54:42.893+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:54:42.892+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:54:42.939+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.313 seconds
[2025-09-02T21:55:13.394+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=3709) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:55:13.398+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:55:13.408+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:55:13.407+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:55:13.508+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:55:13.639+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:55:13.639+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:55:13.765+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:55:13.762+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:55:13.846+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.484 seconds
[2025-09-02T21:55:44.776+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=3805) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:55:44.777+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:55:44.781+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:55:44.780+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:55:44.806+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:55:44.847+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:55:44.847+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:55:44.882+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:55:44.882+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:55:44.920+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.155 seconds
[2025-09-02T21:56:15.104+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=3851) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:56:15.107+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:56:15.111+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:56:15.110+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:56:15.154+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:56:15.217+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:56:15.216+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:56:15.311+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:56:15.311+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:56:15.383+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.294 seconds
[2025-09-02T21:56:45.549+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=3897) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:56:45.551+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:56:45.554+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:56:45.554+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:56:45.584+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:56:45.638+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:56:45.637+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:56:45.685+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:56:45.685+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:56:45.725+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.191 seconds
[2025-09-02T21:57:15.835+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=3943) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:57:15.841+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:57:15.844+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:57:15.844+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:57:15.871+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:57:15.926+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:57:15.926+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:57:15.966+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:57:15.966+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:57:16.003+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.181 seconds
[2025-09-02T21:57:46.098+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=3989) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:57:46.100+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:57:46.104+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:57:46.103+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:57:46.129+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:57:46.174+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:57:46.174+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:57:46.209+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:57:46.209+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:57:46.246+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.161 seconds
[2025-09-02T21:58:16.812+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4035) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:58:16.818+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:58:16.821+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:58:16.821+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:58:16.853+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:58:16.895+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:58:16.895+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:58:16.945+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:58:16.945+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:58:16.981+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.182 seconds
[2025-09-02T21:58:47.149+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4081) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:58:47.151+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:58:47.157+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:58:47.156+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:58:47.194+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:58:47.252+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:58:47.251+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:58:47.295+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:58:47.295+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:58:47.323+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.193 seconds
[2025-09-02T21:59:17.984+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4127) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:59:17.990+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:59:17.993+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:59:17.993+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:59:18.033+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:59:18.077+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:59:18.077+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:59:18.124+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:59:18.124+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:59:18.160+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.187 seconds
[2025-09-02T21:59:48.705+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4173) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:59:48.706+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T21:59:48.710+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:59:48.709+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:59:48.753+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T21:59:48.817+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:59:48.817+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T21:59:48.884+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T21:59:48.884+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T21:59:48.924+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.230 seconds
[2025-09-02T22:00:19.024+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4219) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:00:19.030+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:00:19.033+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:00:19.032+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:00:19.057+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:00:19.097+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:00:19.097+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:00:19.139+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:00:19.138+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:00:19.175+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.162 seconds
[2025-09-02T22:00:49.295+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4265) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:00:49.296+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:00:49.299+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:00:49.299+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:00:49.323+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:00:49.361+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:00:49.361+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:00:49.400+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:00:49.399+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:00:49.431+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.147 seconds
[2025-09-02T22:01:20.167+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4311) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:01:20.170+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:01:20.176+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:01:20.175+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:01:20.253+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:01:20.390+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:01:20.380+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:01:20.572+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:01:20.572+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:01:20.714+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.574 seconds
[2025-09-02T22:01:50.911+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4357) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:01:50.913+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:01:50.918+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:01:50.918+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:01:50.952+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:01:50.999+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:01:50.999+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:01:51.039+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:01:51.039+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:01:51.078+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.184 seconds
[2025-09-02T22:02:21.175+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4403) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:02:21.177+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:02:21.182+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:02:21.181+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:02:21.216+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:02:21.270+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:02:21.269+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:02:21.317+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:02:21.317+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:02:21.356+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.193 seconds
[2025-09-02T22:02:51.464+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4447) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:02:51.466+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:02:51.471+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:02:51.470+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:02:51.510+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:02:51.584+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:02:51.584+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:02:51.644+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:02:51.644+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:02:51.697+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.252 seconds
[2025-09-02T22:03:22.211+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4493) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:03:22.213+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:03:22.217+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:03:22.216+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:03:22.248+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:03:22.294+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:03:22.294+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:03:22.338+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:03:22.338+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:03:22.377+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.176 seconds
[2025-09-02T22:03:52.910+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4539) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:03:52.911+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:03:52.915+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:03:52.914+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:03:52.949+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:03:53.012+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:03:53.012+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:03:53.107+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:03:53.103+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:03:53.173+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.276 seconds
[2025-09-02T22:04:23.665+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4585) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:04:23.671+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:04:23.674+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:04:23.674+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:04:23.703+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:04:23.752+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:04:23.752+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:04:23.823+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:04:23.823+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:04:23.877+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.228 seconds
[2025-09-02T22:04:59.965+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4633) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:04:59.969+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:04:59.977+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:04:59.975+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:05:00.093+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:05:00.232+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:05:00.231+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:05:00.405+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:05:00.404+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:05:00.544+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.631 seconds
[2025-09-02T22:05:31.879+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4677) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:05:31.885+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:05:31.892+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:05:31.891+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:05:31.938+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:05:32.020+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:05:32.019+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:05:32.067+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:05:32.067+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:05:32.107+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.256 seconds
[2025-09-02T22:06:04.607+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4723) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:06:04.613+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:06:04.619+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:06:04.619+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:06:04.659+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:06:04.715+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:06:04.715+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:06:04.765+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:06:04.765+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:06:04.799+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.207 seconds
[2025-09-02T22:06:37.312+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4769) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:06:37.318+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:06:37.323+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:06:37.322+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:06:37.358+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:06:37.414+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:06:37.413+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:06:37.460+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:06:37.460+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:06:37.500+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.201 seconds
[2025-09-02T22:07:10.193+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4815) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:07:10.195+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:07:10.200+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:07:10.200+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:07:10.231+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:07:10.274+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:07:10.274+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:07:10.314+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:07:10.314+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:07:10.355+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.179 seconds
[2025-09-02T22:07:43.646+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4861) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:07:43.650+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:07:43.654+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:07:43.653+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:07:43.700+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:07:43.766+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:07:43.765+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:07:43.843+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:07:43.842+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:07:43.932+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.308 seconds
[2025-09-02T22:08:17.054+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4909) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:08:17.062+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:08:17.068+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:08:17.067+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:08:17.126+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:08:17.221+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:08:17.219+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:08:17.311+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:08:17.310+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:08:17.382+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.347 seconds
[2025-09-02T22:08:48.562+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4953) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:08:48.566+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:08:48.582+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:08:48.581+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:08:48.644+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:08:48.726+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:08:48.725+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:08:48.795+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:08:48.795+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:08:48.830+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.306 seconds
[2025-09-02T22:09:24.223+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=4999) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:09:24.227+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:09:24.241+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:09:24.239+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:09:24.335+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:09:24.440+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:09:24.439+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:09:24.574+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:09:24.573+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:09:24.635+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.441 seconds
[2025-09-02T22:10:00.230+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=5050) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:10:00.233+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:10:00.260+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:10:00.249+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:10:00.685+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:10:01.185+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:10:01.184+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:10:01.497+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:10:01.496+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:10:01.709+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 1.544 seconds
[2025-09-02T22:10:31.866+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=5095) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:10:31.869+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:10:31.874+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:10:31.873+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:10:31.927+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:10:32.020+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:10:32.019+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:10:32.089+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:10:32.089+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:10:32.130+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.294 seconds
[2025-09-02T22:11:02.345+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=5131) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:11:02.346+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:11:02.352+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:11:02.351+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:11:02.384+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:11:02.457+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:11:02.456+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:11:02.511+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:11:02.511+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:11:02.554+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.226 seconds
[2025-09-02T22:11:32.769+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=5167) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:11:32.774+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:11:32.779+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:11:32.778+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:11:32.834+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:11:32.989+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:11:32.989+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:11:33.047+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:11:33.047+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:11:33.090+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.346 seconds
[2025-09-02T22:12:03.200+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=5210) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:12:03.201+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:12:03.205+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:12:03.205+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:12:03.235+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:12:03.304+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:12:03.304+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:12:03.355+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:12:03.355+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:12:03.396+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.211 seconds
[2025-09-02T22:12:33.505+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=5256) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:12:33.508+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:12:33.515+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:12:33.513+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:12:33.590+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:12:33.673+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:12:33.673+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:12:33.729+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:12:33.729+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:12:33.783+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.301 seconds
[2025-09-02T22:13:04.834+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=5302) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:13:04.837+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:13:04.846+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:13:04.845+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:13:04.888+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:13:05.003+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:13:05.001+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:13:05.124+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:13:05.123+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:13:05.183+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.387 seconds
[2025-09-02T22:13:35.593+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=5348) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:13:35.600+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:13:35.603+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:13:35.603+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:13:35.648+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:13:35.733+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:13:35.733+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:13:35.832+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:13:35.831+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:13:35.921+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.348 seconds
[2025-09-02T22:14:06.038+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=5394) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:14:06.044+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:14:06.049+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:14:06.048+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:14:06.101+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:14:06.184+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:14:06.184+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:14:06.287+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:14:06.286+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:14:06.343+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.331 seconds
[2025-09-02T22:14:36.864+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=5440) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:14:36.867+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:14:36.873+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:14:36.872+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:14:36.912+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:14:36.969+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:14:36.968+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:14:37.039+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:14:37.039+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:14:37.090+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.251 seconds
[2025-09-02T22:15:07.676+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=5486) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:15:07.678+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:15:07.682+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:15:07.681+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:15:07.711+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:15:07.755+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:15:07.755+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:15:07.796+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:15:07.795+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:15:07.826+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.163 seconds
[2025-09-02T22:15:38.457+0800] INFO - processor.py:186 - _handle_dag_file_processing() - Started process (PID=5532) to work on /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:15:38.463+0800] INFO - processor.py:914 - process_file() - Processing file /opt/airflow/dags/example_first_dag.py for tasks to queue
[2025-09-02T22:15:38.468+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:15:38.467+0800] INFO - dagbag.py:588 - collect_dags() - Filling up the DagBag from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:15:38.515+0800] INFO - processor.py:925 - process_file() - DAG(s) 'example_first_dag' retrieved from /opt/airflow/dags/example_first_dag.py
[2025-09-02T22:15:38.617+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:15:38.616+0800] INFO - dag.py:3239 - bulk_write_to_db() - Sync 1 DAGs
[2025-09-02T22:15:38.677+0800] INFO - logging_mixin.py:190 - _propagate_log() - [2025-09-02T22:15:38.677+0800] INFO - dag.py:4180 - calculate_dagrun_date_fields() - Setting next_dagrun for example_first_dag to 2025-09-02 13:00:00+00:00, run_after=2025-09-02 14:00:00+00:00
[2025-09-02T22:15:38.713+0800] INFO - processor.py:208 - _run_file_processor() - Processing /opt/airflow/dags/example_first_dag.py took 0.275 seconds
